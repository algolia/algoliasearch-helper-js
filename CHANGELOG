2.21.1 - 2017-07-20
 * fix(events): We need searchEmptyQueue before result to avoid inconsistency
 * chore(ci): fix build so that tests can be executed
 * fix(url): When there are no "other attributes" should not render last &
 * fix(pending-search): dispatch error event before searchQueueEmpty
 * chore(doc): typo in example

2.21.0 - 2017-07-08
 * fix(events): events for all kinds of searches
 * docs(jsdoc): fix misc spelling and typos

2.20.1 - 2017-03-11
 * fix(build): Remove es2015 module

2.20.0 - 2017-03-10
 * feat(pending-search): let the dev know the state of the search requests queue
 * feat(maxFacetHits): implement maxFacetHits for SFFV
 * chore(build): Provide an ES module build

2.19.0 - 2017-03-06
 *  feat(search-response): Exposed raw results
 *  doc(concepts): fix formulation
 *  doc(derivation): Fix typo (fix #476)

2.18.1 - 2017-02-14
 * fix(agent): sets the helper agent once
 * doc(concepts): Fix typo
 * fix(toggleRefinement): rename toggleRefinement to toggleFacetRefinement

2.18.0 - 2017-01-10
 * feat(client): Add methods to set/get the client.
 * doc(sffv): Add the type of the results of searchForFacetValues
 * test(constructor): Update and rename instanciate.js to instantiate.js

2.17.1 - 2016-12-28
 * fix(agent): Add a test if addAlgoliaAgent exists

2.17.0 - 2016-12-22
 * feat(derive): Let the user create a derivation of an helper
 * misc(user-agent): Add a user agent for the JS Helper
 * misc(ga): add trackers :see-no-evil:
 * fix(doc): fix deep object documentation

2.16.0 - 2016-12-06
 * feat(searchForFacetValues): new method to search in facet values

2.15.0 - 2016-11-22
 * feat(getQuery): return the main query that will be sent to Algolia using
 the helper
 * fix(searchOnce): Passing null for results to callback when err present. Fix #399
 * doc(reference): fixed addDisjunctiveFacetRefinement example
 * doc(content): Fix minor typos

2.14.0 - 2016-09-09
 * feat(hierarchicalFacets): add add and remove operations on hierarchical facets
 * fix(SearchParameters): Using unknown parameters not showing warning
 * doc(readme): Fix link to documentation
 * doc(getFacetValues): number of facets > maxValuesPerFacet
 * test(perf): add perf test
 * chore(package): update onchange to version 3.0.0
 * chore(package): update pretty-bytes to version 4.0.2

2.13.0 - 2016-08-24
 * fix(getFacetValues): fix the ordering when not specified
 * fix(hierarchicalFacets): do not throw if no refinements
 * fix(excludes): conjunctive facets results report exclusions
 * fix(setQueryParameters): falsey params returns the same instance
 * feat(Helper): add / remove facets methods
 * feat(Helper): add clearCache method
 * feat(SearchParameters): do not update page when using setters
 * feat(SearchResults): backport instantsearch.js getRefinement method

2.12.0 - 2016-07-22
  * feat(docs): new landing page + doc
  * chore(dependencies): upgrade dependencies, especially move to lodash 4

2.11.1 - 2016-07-20
  * chore(build): add build in npm for npmcdn.com usage

2.11.0 - 2016-06-22
  * feat(getStateAsQueryString): add safe option to encode the whole url instead of "smart" (but failing)
  encoding

2.10.0 - 2016-06-10
  * fix(_parseNumbers): let the user store values that are not parseable
  numbers for root parameters of the state (eg. aroundRadius='all')
  * fix(perf): remove deepFreeze
  * test(_parseNumbers): moar tests
  * doc(misc): fix typos

2.9.1 - 2016-03-16
  * fix(filterState): handle hierarchical facet attributes

2.9.0 - 2016-02-19
  * feat(SearchParameters): Support for unknown parameters
  * feat(url-tools): Support for remapping keys in URL methods
  * fix(filters): Makes it possible to add then remove a string based numeric
  filter
  * docs(pagination): documents the page number reset behavior

2.8.1 - 2016-02-01
  * feat: add snippetEllipsisText, disableExactOnAttributes, enableExactOnSingleWordQuery
  * docs(readme): fix wrong /doc links

2.8.0 - 2015-12-11
  * feat(search-parameters): adds support for optionnal tag and facet filters
  * fix(search-results): adds missing results parameters (fix #261)
  * fix(hierarchicalFacets): ensures the order of the hierarchical facets matches the order of the declared hierarchical attributes
  * test(CI): IE8 now requires a polyfill

2.7.0 - 2015-12-02
  * feature(algoliasearch.helper): adds getNumericRefinement (fix #214)
  * fix(request-builder): makes queries less ambiguous for client (fix #205)
  * fix(core): makes node dependencies explicit (fix #256)
  * chore(tests): reorganizes tests

2.6.9 - 2015-11-24
  * FIX : exclude hierarchical facet when the rootPath equal to the facet

2.6.8 - 2015-11-24
  * FEATURE: add prefix path option to hierarchical facet
  * FEATURE: add showParentLevel options to the hierararchical facet

2.6.7 - 2015-11-17
  * FIX : does not throw when no results when using hierarchical facets

2.6.6 - 2015-11-04
  * FIX : adds missing attribute minProximity in SearchParameters
  * FIX : adds numeric missing parameters in the parsing function
  * CHORE : updates jsdoc links (were outdated)
  * CHORE : adds missing documentation for filter on SearchParameters

2.6.5 - 2015-11-03
  * FIX: hierarchical toggle refine + new query with no result led to throw

2.6.4 - 2015-11-02
  * FIX: setPage 0 when toggling hierarchical refinements (consistency)

2.6.3 - 2015-10-19
  * FIX: add new geo search parameters

2.6.2 - 2015-10-16
  * CHORE : removes console.dir in code

2.6.1 - 2015-10-15
  * FEATURE : auto magic toggleRefinement on SearchParameters

2.6.0 - 2015-10-15
  * FEATURE : new function to get a query string from any state
  * FEATURE : filter on a state to get only part of the search parameters
  * FIX : Fix isNumericRefined and removeNumericFilters
  * CHORE : expose url related functions in a dedicated module
  algoliasearchHelper.urlTools

2.5.1 - 2015-10-12
  * FIX: the AlgoliaSearchHelper.getFacetsStats was not returning the stats
  if the attribute was both a regular & disjunctive facet.

2.5.0 - 2015-10-09
  * CHORE : Update qs to 5.2.0
  * FEATURE : getStateAsQueryString now orders the serialized parameters
  * FIX : IE8 has no array indexof


2.4.0 - 2015-09-23
  * FEATURE : add AlgoliaSearchHelper.getState(filters) to get a filtered state
  * FEATURE : add AlgoliaSearchHelper.getStateAsQueryString to get a part of
  the state as a queryString
  * FEATURE : add AlgoliaSearchHelper.setStateFromQueryString to set the state
  of the helper with a query string
  * FEATURE : add AlgoliaSearchHelper.getConfigurationFromQueryString. Reads
  a query string and returns the associated partial helper configuration
  * FEATURE : add AlgoliaSearchHelper.getForeignConfigurationInQueryString to
  get the configuration contained in a qs that is not from the helper
  * FIX : all the properties that are supposed to be numbers are now parsed in
  the SearchParameters

2.3.6 - 2015-09-17
  * CHORE: technical release, move all deps to ^version and add a shrinkwrap to allow reproducible builds

2.3.5 - 2015-09-12
  * FIX: getFacetStats should look into facets and disjunctiveFacets

2.3.4 - 2015-09-11
  * FIX: #208, getFacetValues should return an empty array if the facet is
  defined but there are no returned values for it (and not throw an exception)
  * CHORE : drop tests on iojs
  * CHORE : travis now requires us to install if missing node env

2.3.3 - 2015-09-09
  * FIX: hasRefinements fix, should check facet, disjunctive, hierarchical, numeric

2.3.2 - 2015-09-03
  * FIX: allow passing the `length` parameter, fix `searchParameters` iteration

2.3.1 - 2015-09-02
  * CHORE: add a console.error() when passing unknown parameters
  * FIX: add offset/length undocumented search parameters

2.3.0 - 2015-09-02
  * FEATURE: #136, fire a 'search' event once a search is sent to Algolia
  * FEATURE: ability to set multiple OR and AND filters with the numeric
  filter API
  * FEATURE: Ability to set the raw numeric filter string
  * CHORE: #125, events documentation
  * FIX(CANBREAK): semantic of addNumericRefinement indeed add an numeric, does not
  update anymore. This can possibly BREAK your code if you were relying on this. Email support@algolia.com if it does
  * FEATURE: add `requestsent` event on the helper when any request is sent
  * FEATURE: add results.getFacetStats
  * FEATURE: add `results.getFacetValues` and add sortBy option to it

2.2.0 - 2015-07-29
  * FIX: #130 toggleRefine should throw an exception when executed with an
  attribute that is not a declared facet
  * TEST: add CI testing (browsers, phantom, node, io)
  * FEATURE: add hierarchicalFacets
  * FIX: fix IE8 and IE9 compatibility
  * REFACTOR: get rid of custom `extend` method, use lodash tools
  * FIX: do not force distinct value to false on empty query
  * DOCS: provide a better readme with tips on how to use the helper
  * FIX: is$Method always return true/false instead of true/undefined
  * FIX: throw when refining an unknown facet
  * FEATURE: implement helper.getState()

2.1.2 - 2015-06-26
  * FIX: #113 support for attributes hightlightPreTag and hightlighPostTag
  * FIX: #112 distinct = undefined sent to the server
  * FIX: #110 helper.hasRefinements() now checks for numerics
  * FIX: #106 convert refinements to string
  * DOC: Update theme + fix (github.com/algolia/minami)
  * DOC: Fix misc links and descrition and added samples of objects
  * DOC: Added a cheat sheet in the generated documentation

2.1.1 - 2015-06-19
  * FIX: #107 Apply rules to distinct to prevent the API to return an error
  * FIX: make algoliasearch-helper requireable + browserifyable by removing the global envify transform

2.1.0 - 2015-06-15
  * FIX: #29 Avoid callback for outdated queries
  * FIX: #64 Sum up the processing time of all queries
  * FIX: #92 Parameters that can be set in the dashboard shouldn't have
  defaults
  * FIX: #62 Make sure disctinct is set to false when it's not possible to
  use distinct in Algolia
  * FEATURE: #91 Support for tags (with support for the raw format #98)
  * FEATURE: #70 Ability to get all refined values: helper.getRefinements(
  facetname )
  * FEATURE: #51 multiple filters for a single conjunctive facet (tests)
  * FEATURE: Ability to modify any parameter of the state easily (#76 #84 #12)
  * FEATURE: #69 Ability to know if a facet is refined, whatever the value
  * FEATURE: #86 Expose SearchParameters, AlgoliaSearchHelper, SearchResults to
  users directly in the builds
  * FEATURE: #25 let the user do a clearRefinement with a function as a filter
  * REFACTORING: SearchParameters is immutable (#14)
  * REFACTORING: Ensure SearchParameters is totally frozen (#14)
  * LIB: Update lodash version to 3.9.x

2.0.4
  * FIX: #82 Fix facet count on records with multiple values for a single
  facet
  * FEATURE: Add exhaustive attribute to a facet and removed useless timeout
  (#80)

2.0.3 - 2015-05-13
  * FIX: #72 add back the ability to do multiple disjunctive facetting on a
  single attribute
  * FEATURE: #73 method to replace the state, without triggering a change
  event: overrideStateWithoutTriggeringChangeEvent (use wisely)
  * FEATURE: #66 add setTypoTolerance to SearchParameters

2.0.2 - 2015-05-06
  * FIX: setHitsPerPage was creating a new property HitsPerPage instead of
  updating the currently available hitsPerPage

2.0.1
  * MEH: because of jsDelivr

2.0.0
  * FIX: set page to 0 if it might change the number of pages returned
  * FIX: handle distinct parameter automatically
  * FIX: batch response handler gets the proper search state
  * FEATURE: (breaking) Now peer depend on algoliasearch v3.1
  * FEATURE: (breaking) Facets stats and timeout infos are consistently
  grouped in the facet object in the SearchResults
  * FEATURE: (breaking) no more extra queries
  * FEATURE: (breaking) Facets results are stored in an array with an order
  that reflects their definition.
  * FEATURE: Search results explicit definition
  * FEATURE: (breaking) Search parameters as a separate object
  * FEATURE: (breaking) Move callback style to a event based API
  * FEATURE: change and results events return the state and the results (if any)
  * FEATURE: SearchRefults.getFacetByName to retrieve a facet object from its
  name
  * FEATURE: SearchParameters.getNumericRefinement: get back the value of a specific numeric
  refinement
  * FEATURE: clear refinements by name
  * FEATURE: isDisjunctiveRefined to check if a disjunctive facet is refined
  * FEATURE: basic support for numeric filters
  * FEATURE: version number on the main helper factory
  * TESTS: defaults test

1.1.0
  * REFACTORING: constructor, now expose the defaults
  * TESTS: defaults test
  * FEATURE: Allow .search(q, params, cb) "callback always last" convention
    introduced by JavaScript client, also on the helper

1.0.0
  * Extraction of the helper from the algolia-client-js v2.9.4
  * FEATURE: CommonJS compatibility
  * FEATURE: UMD builds in dist/
  * TESTS: Some basic tests
